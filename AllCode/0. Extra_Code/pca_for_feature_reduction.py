# -*- coding: utf-8 -*-
"""
Created on Wed Jan 10 11:18:15 2024

@author: BISHWAJIT
"""

import pandas as pd
from sklearn.decomposition import PCA
from sklearn.preprocessing import StandardScaler

# Load the CSV file into a Pandas DataFrame
input_csv_file = 'your_input_file.csv'
df = pd.read_csv(input_csv_file)

# Separate features (X) from the target variable if applicable
X = df.drop('target_column', axis=1)  # Remove the target column if it exists

# Standardize the features (important for PCA)
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Apply PCA
pca = PCA()
X_pca = pca.fit_transform(X_scaled)

# Print explained variance ratio for each principal component
explained_variance_ratio = pca.explained_variance_ratio_
for i, ratio in enumerate(explained_variance_ratio):
    print(f'Principal Component {i + 1}: Explained Variance Ratio = {ratio:.4f}')

# Identify the "best" column (principal component)
best_component_index = explained_variance_ratio.argmax()
best_column_name = f'PC_{best_component_index + 1}'

print(f'\nThe best column is: {best_column_name} (Principal Component {best_component_index + 1})')

# Export the DataFrame with the best principal component to a new CSV file
output_csv_file = 'your_output_file.csv'
df_best_column = pd.DataFrame(data=X_pca[:, best_component_index], columns=[best_column_name])
df_best_column['target_column'] = df['target_column']  # Include the target column if applicable
df_best_column.to_csv(output_csv_file, index=False)

print(f'Best column data saved to {output_csv_file}')
