# -*- coding: utf-8 -*-
"""
Created on Sun Oct  8 17:00:05 2023
@author: bishwajit
"""
import os
import re
# Function to remove hexadecimal addresses and replace commas with underscores
def clean_line(line):
    # Split the line into parts using commas
    parts = line.split(',')
    
    # Determine the size of the split
    split_size = len(parts)

    # Remove any parts starting with "0x" from the split
    if split_size >= 1:

        #cleaned_parts = [part for part in parts if not part.startswith("0x")]
        cleaned_parts = [part for part in parts if not re.match(r'^[0-9]+$', part) and not re.match(r'^[!@#$%^&*(),.?":{}|<>]+$', part) and not part.startswith("0x")]
    else:
        cleaned_parts = parts
    
    # Replace commas with underscores in the cleaned parts
    cleaned_line = '_'.join(cleaned_parts)
    
    return cleaned_line

# Input folder path containing text files
input_folder = r'F:\Malware_old\malware_dataset\malware_samples\Trojan\cat\api_name_arguments'  # Replace with your input folder path

# Output folder path to store cleaned files
output_folder = r'F:\Malware_old\malware_dataset\malware_samples\Trojan\cat\api_name_arguments_clean'  # Replace with your output folder path
os.makedirs(output_folder, exist_ok=True)

# Ensure the output folder exists or create it if it doesn't
if not os.path.exists(output_folder):
    os.makedirs(output_folder)

# Loop through all files in the input folder
for filename in os.listdir(input_folder):
    if filename.endswith('.txt'):
        input_file_path = os.path.join(input_folder, filename)
        output_file_path = os.path.join(output_folder, filename)

        # Open the input file for reading with 'utf-8' encoding
        with open(input_file_path, 'r', encoding='utf-8') as input_file, open(output_file_path, 'w', encoding='utf-8') as output_file:
            # Iterate through the lines in the input file
            for line in input_file:
                # Clean the line and write it to the output file
                cleaned_line = clean_line(line)
                if cleaned_line:
                    output_file.write(cleaned_line + '\n')

        print(f"Processing complete for '{filename}'. Cleaned data saved in '{output_file_path}'.")
