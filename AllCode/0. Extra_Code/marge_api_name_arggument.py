import os

# Specify the directories containing the source files
source_directory = r'F:\Malware_old\malware_dataset\malware_samples\Trojan\cat\api_name'  # Update with your source directory path
arg_directory = r'F:\Malware_old\malware_dataset\malware_samples\Trojan\cat\api_arguments'  # Update with your argument directory path

# Specify the output directory
output_directory = r'F:\Malware_old\malware_dataset\malware_samples\Trojan\cat\api_name_arguments'  # Update with your desired output directory path
os.makedirs(output_directory, exist_ok=True)

# List all files in the source directory
source_files = os.listdir(source_directory)

# Iterate through the source files
for source_file_name in source_files:
    # Construct the full file paths
    source_file_path = os.path.join(source_directory, source_file_name)
    arg_file_name = source_file_name.replace("api_", "arg_")
    arg_file_path = os.path.join(arg_directory, arg_file_name)

    # Check if the corresponding argument file exists
    if not os.path.isfile(arg_file_path):
        print(f"Argument file not found for {source_file_name}. Skipping.")
        continue

    # Read data from both source and argument files
    with open(source_file_path, 'r', encoding='utf-8') as source_file, \
         open(arg_file_path, 'r', encoding='utf-8') as arg_file:

        source_lines = source_file.readlines()
        arg_lines = arg_file.readlines()

        # Combine lines from api_name and api_arguments files
        merged_lines = [f"{source.strip()},{arg.strip()}\n" for source, arg in zip(source_lines, arg_lines)]

        # Construct the merged file name
        merged_file_name = f"api_name_api_argument_{source_file_name}"

        # Construct the full output file path
        output_file_path = os.path.join(output_directory, merged_file_name)

        # Write the merged lines to the output file
        with open(output_file_path, 'w', encoding='utf-8') as output_file:
            output_file.writelines(merged_lines)

        print(f"Merged file '{merged_file_name}' saved in '{output_directory}'.")

print("Merging and renaming completed.")
