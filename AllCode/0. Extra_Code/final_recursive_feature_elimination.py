# -*- coding: utf-8 -*-
"""
Created on Wed Jan 10 19:34:09 2024

@author: BISHWAJIT
"""

# Import necessary libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.feature_selection import RFE
from sklearn.metrics import accuracy_score
from sklearn.preprocessing import LabelEncoder

# Load your CSV file
csv_file_path = r'C:\sample\feature_vector\skip_feature_vector\backdoor.csv'
df = pd.read_csv(csv_file_path)

# Assuming the "family" column is the target variable and excluding the "hash" column
X = df.drop(columns=['family', 'hash'])
y = df['family']

# Encode categorical labels if needed
label_encoder = LabelEncoder()
y_encoded = label_encoder.fit_transform(y)

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y_encoded, test_size=0.2, random_state=42)

# Choose a classifier (e.g., RandomForestClassifier)
classifier = RandomForestClassifier()

# Use Recursive Feature Elimination (RFE) for feature selection
num_features_to_select = 20000
rfe = RFE(estimator=classifier, n_features_to_select=num_features_to_select)
X_train_rfe = rfe.fit_transform(X_train, y_train)
X_test_rfe = rfe.transform(X_test)

# Fit the model with the selected features
classifier.fit(X_train_rfe, y_train)

# Make predictions and evaluate the model
y_pred = classifier.predict(X_test_rfe)
accuracy = accuracy_score(y_test, y_pred)

# Create a new dataframe with selected features
selected_features_df = pd.DataFrame(data=X_train_rfe, columns=X.columns[rfe.support_])

# Save the selected features dataframe to a CSV file
selected_features_csv_path = r'C:\sample\feature_vector\skip_feature_vector\selected_features_backdoor.csv'
selected_features_df.to_csv(selected_features_csv_path, index=False)

print(f"Selected Features: {X.columns[rfe.support_]}")
print(f"Accuracy with selected features: {accuracy}")
###############################################################################
# Read the CSV file into a DataFrame
df20k = pd.read_csv(selected_features_csv_path)

# Get the column names as a list
column_names = list(df20k.columns)

# Create a new DataFrame with column names as rows
column_names_df = pd.DataFrame({'Unigram': column_names})

# Specify the output CSV file path
output_csv_path = r'C:\FeatureVector\backdoor20k.csv'  # Replace with your desired output file path

# Save the new DataFrame to a CSV file
column_names_df.to_csv(output_csv_path, index=False)

print(f"Column names saved to {output_csv_path}")