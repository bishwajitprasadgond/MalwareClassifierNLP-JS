# -*- coding: utf-8 -*-
"""
Created on Thu Feb  1 18:21:07 2024

@author: BISHWAJIT
"""
# pip install pymrmr

import pandas as pd
from sklearn.feature_selection import SelectKBest, mutual_info_regression, f_regression
from sklearn.decomposition import PCA
from sklearn.preprocessing import StandardScaler
import numpy as np

# Load your CSV file into a DataFrame
df = pd.read_csv('your_file.csv')

# Assuming the first two columns are not features
features = df.columns[2:]

# Select target column (if applicable)
target = df['target_column']  # Replace 'target_column' with your actual target column name if applicable

# Prepare X (features) and y (target) for feature selection
X = df[features]
y = target if 'target_column' in df.columns else None

# Feature Selection using mRMR
# Note: You may need to install the `pymrmr` library for mRMR
from pymrmr import mRMR
selected_features_mRMR = mRMR(X, 'MIQ', 20000)

# Feature Selection using PCA
# Standardize the data
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Apply PCA
pca = PCA(n_components=20000)
X_pca = pca.fit_transform(X_scaled)
selected_features_PCA = df.columns[2:][np.abs(pca.components_).argsort()[0][-20000:]]

# Feature Selection using Pearson Correlation Coefficient (PCC)
# SelectKBest with f_regression can be used as an alternative for PCC
selector_pcc = SelectKBest(score_func=f_regression, k=20000)
selector_pcc.fit(X, y)
selected_features_PCC = X.columns[selector_pcc.get_support()]

# Now you can use the selected features in further analysis
print("Selected Features using mRMR:", selected_features_mRMR)
print("Selected Features using PCA:", selected_features_PCA)
print("Selected Features using PCC:", selected_features_PCC)

# Export selected features to CSV
selected_features_df = pd.DataFrame({
    'mRMR': selected_features_mRMR,
    'PCA': selected_features_PCA,
    'PCC': selected_features_PCC
})

selected_features_df.to_csv('selected_features.csv', index=False)
