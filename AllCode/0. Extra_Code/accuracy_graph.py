# -*- coding: utf-8 -*-
"""
Created on Wed Oct 11 19:52:31 2023

@author: bishwajit
"""

import pandas as pd
from sklearn.metrics import confusion_matrix
import seaborn as sns
import matplotlib.pyplot as plt

# Define the class labels
classes = ['adware', 'backdoor', 'downloader', 'trojan', 'spyware', 'virus', 'worm']

# Create an empty confusion matrix
conf_matrix_total = [[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]

# Loop through each class
for class_label in classes:
    # Load the CSV file into a DataFrame
    data = pd.read_csv(f'G:\\new_malware_json_zip\\plot\\bigram_40k\\{class_label}_similarity_matrix.csv', sep=',')
    
    # Define the true and predicted labels for the current class
    true_labels = [class_label] * len(data)
    predicted_labels = data['label'].tolist()
    
    # Create a confusion matrix for the current class
    conf_matrix = confusion_matrix(true_labels, predicted_labels, labels=classes)
    
    # Add the current class's confusion matrix to the total matrix
    conf_matrix_total += conf_matrix

# Plot the total confusion matrix
plt.figure(figsize=(8, 6))  # Define figure size
sns.heatmap(conf_matrix_total, annot=True, fmt='d', cmap='Blues', xticklabels=classes, yticklabels=classes)
plt.xlabel('Predicted')
plt.ylabel('True')
plt.title('Total Confusion Matrix')
plt.show()
