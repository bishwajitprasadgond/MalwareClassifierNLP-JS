# -*- coding: utf-8 -*-
"""
Created on Tue Jan 9 09:32:19 2024

@author: BISHWAJIT
"""

import pandas as pd
from difflib import SequenceMatcher
from tqdm import tqdm  # Import tqdm for the progress bar

# Function to calculate similarity ratio between two strings
def similar(a, b):
    return SequenceMatcher(None, a, b).ratio()

# Function to replace similar rows in the DataFrame
def replace_similar_rows(df):
    total_rows = len(df)
    count = 0
    # Loop through all rows in the DataFrame
    for i in tqdm(range(total_rows), desc="Processing CSV", unit="row"):
        # Compare each row with the remaining rows
        for j in range(i + 1, total_rows):
            # Correct the column names in the similar function
            similarity_ratio = similar(df.iloc[i]['Unigram'], df.iloc[j]['Unigram'])
            # Check if the similarity ratio is above the threshold (0.9)
            if similarity_ratio >= 0.9:
                count += 1
                print(f"Replacing rows: {df.iloc[j]['Unigram']} with {df.iloc[i]['Unigram']}")
                # Replace the rows with the matched string
                df.iloc[j]['Unigram'] = df.iloc[i]['Unigram']

    # Remove duplicate rows based on 'Unigram'
    df.drop_duplicates(subset=['Unigram'], inplace=True)

# Read CSV into DataFrame
csv_data = r'F:\Test\virus.csv'

# Create DataFrame from the CSV data
df = pd.read_csv(csv_data)

# Specify the column you want to compare for similarity
df['Unigram'] = df['Unigram'].astype(str)  # Replace 'Unigram' with the actual column name

# Replace similar rows
replace_similar_rows(df)

# Save the updated DataFrame to a new CSV file
output_csv_path = 'F:\Test\virus_output_file.csv'  # Replace with the desired output file path
df.to_csv(output_csv_path, index=False)

print(f"\nSimilar rows replaced and saved to {output_csv_path}")
