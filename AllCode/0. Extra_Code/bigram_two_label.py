# -*- coding: utf-8 -*-
"""
Created on Tue Nov 21 21:56:54 2023

@author: bishwajit
"""
import pandas as pd

# Load the CSV files into DataFrames
adware_data = pd.read_csv(r'D:\Malware\bigram_analysis\jaccard_similarity\adware.csv', sep=',')
trojan_data = pd.read_csv(r'D:\Malware\bigram_analysis\jaccard_similarity\trojan.csv', sep=',')
worm_data = pd.read_csv(r'D:\Malware\bigram_analysis\jaccard_similarity\worm.csv', sep=',')
downloader_data = pd.read_csv(r'D:\Malware\bigram_analysis\jaccard_similarity\downloader.csv', sep=',')
backdoor_data = pd.read_csv(r'D:\Malware\bigram_analysis\jaccard_similarity\backdoor.csv', sep=',')
spyware_data = pd.read_csv(r'D:\Malware\bigram_analysis\jaccard_similarity\spyware.csv', sep=',')
virus_data = pd.read_csv(r'D:\Malware\bigram_analysis\jaccard_similarity\virus.csv', sep=',')
benign_data = pd.read_csv(r'D:\Malware\bigram_analysis\jaccard_similarity\benign.csv', sep=',')

# Add the "label" column based on conditions
def assign_label(row):
    if (
        (row['adware_unique_bigrams.csv'] > 0.0 or
        row['spyware_unique_bigrams.csv'] > 0.0 or
        row['virus_unique_bigrams.csv'] > 0.0 or
        row['trojan_unique_bigrams.csv'] > 0.0 or
        row['worm_unique_bigrams.csv'] > 0.0 or
        row['downloader_unique_bigrams.csv'] > 0.0 or
        row['backdoor_unique_bigrams.csv'] > 0.0 or
        row['benign_unique_bigrams.csv'] > 0.0)
    ):
        labels = {
            'adware': row['adware_unique_bigrams.csv'],
            'spyware': row['spyware_unique_bigrams.csv'],
            'virus': row['virus_unique_bigrams.csv'],
            'trojan': row['trojan_unique_bigrams.csv'],
            'worm': row['worm_unique_bigrams.csv'],
            'downloader': row['downloader_unique_bigrams.csv'],
            'backdoor': row['backdoor_unique_bigrams.csv'],
            'benign': row['benign_unique_bigrams.csv']
        }
        return max(labels, key=labels.get)
    else:
        return ''

# Assign labels for each DataFrame
adware_data['label'] = adware_data.apply(assign_label, axis=1)
trojan_data['label'] = trojan_data.apply(assign_label, axis=1)
worm_data['label'] = worm_data.apply(assign_label, axis=1)
downloader_data['label'] = downloader_data.apply(assign_label, axis=1)
backdoor_data['label'] = backdoor_data.apply(assign_label, axis=1)
spyware_data['label'] = spyware_data.apply(assign_label, axis=1)
virus_data['label'] = virus_data.apply(assign_label, axis=1)
benign_data['label'] = benign_data.apply(assign_label, axis=1)

# Add the "predicted_label" column based on conditions
def assign_predicted_label(row, filename):
    if filename.startswith('adware'):
        return 'adware'
    elif filename.startswith('backdoor'):
        return 'backdoor'
    elif filename.startswith('downloader'):
        return 'downloader'
    elif filename.startswith('trojan'):
        return 'trojan'
    elif filename.startswith('spyware'):
        return 'spyware'
    elif filename.startswith('virus'):
        return 'virus'
    elif filename.startswith('worm'):
        return 'worm'
    elif filename.startswith('benign'):
        return 'benign'
    else:
        return ''

# Assign labels for "predicted_label" column
adware_data['predicted_label'] = adware_data.apply(lambda x: assign_predicted_label(x, 'adware.csv'), axis=1)
trojan_data['predicted_label'] = trojan_data.apply(lambda x: assign_predicted_label(x, 'trojan.csv'), axis=1)
worm_data['predicted_label'] = worm_data.apply(lambda x: assign_predicted_label(x, 'worm.csv'), axis=1)
downloader_data['predicted_label'] = downloader_data.apply(lambda x: assign_predicted_label(x, 'downloader.csv'), axis=1)
backdoor_data['predicted_label'] = backdoor_data.apply(lambda x: assign_predicted_label(x, 'backdoor.csv'), axis=1)
spyware_data['predicted_label'] = spyware_data.apply(lambda x: assign_predicted_label(x, 'spyware.csv'), axis=1)
virus_data['predicted_label'] = virus_data.apply(lambda x: assign_predicted_label(x, 'virus.csv'), axis=1)
benign_data['predicted_label'] = benign_data.apply(lambda x: assign_predicted_label(x, 'benign.csv'), axis=1

)

# Drop rows where 'label' is empty
adware_data = adware_data[adware_data['label'] != '']
trojan_data = trojan_data[trojan_data['label'] != '']
worm_data = worm_data[worm_data['label'] != '']
downloader_data = downloader_data[downloader_data['label'] != '']
backdoor_data = backdoor_data[backdoor_data['label'] != '']
spyware_data = spyware_data[spyware_data['label'] != '']
virus_data = virus_data[virus_data['label'] != '']
benign_data = benign_data[benign_data['label'] != '']

# Drop rows where all columns related to unique bigrams are zero
adware_data = adware_data[
    ~(
        (adware_data[['adware_unique_bigrams.csv',
                      'spyware_unique_bigrams.csv',
                      'virus_unique_bigrams.csv',
                      'trojan_unique_bigrams.csv',
                      'worm_unique_bigrams.csv',
                      'downloader_unique_bigrams.csv',
                      'backdoor_unique_bigrams.csv',
                      'benign_unique_bigrams.csv']] == 0.0).all(axis=1)
    )
]

trojan_data = trojan_data[
    ~(
        (trojan_data[['adware_unique_bigrams.csv',
                      'spyware_unique_bigrams.csv',
                      'virus_unique_bigrams.csv',
                      'trojan_unique_bigrams.csv',
                      'worm_unique_bigrams.csv',
                      'downloader_unique_bigrams.csv',
                      'backdoor_unique_bigrams.csv',
                      'benign_unique_bigrams.csv']] == 0.0).all(axis=1)
    )
]

worm_data = worm_data[
    ~(
        (worm_data[['adware_unique_bigrams.csv',
                      'spyware_unique_bigrams.csv',
                      'virus_unique_bigrams.csv',
                      'trojan_unique_bigrams.csv',
                      'worm_unique_bigrams.csv',
                      'downloader_unique_bigrams.csv',
                      'backdoor_unique_bigrams.csv',
                      'benign_unique_bigrams.csv']] == 0.0).all(axis=1)
    )
]

downloader_data = downloader_data[
    ~(
        (downloader_data[['adware_unique_bigrams.csv',
                      'spyware_unique_bigrams.csv',
                      'virus_unique_bigrams.csv',
                      'trojan_unique_bigrams.csv',
                      'worm_unique_bigrams.csv',
                      'downloader_unique_bigrams.csv',
                      'backdoor_unique_bigrams.csv',
                      'benign_unique_bigrams.csv']] == 0.0).all(axis=1)
    )
]

backdoor_data = backdoor_data[
    ~(
        (backdoor_data[['adware_unique_bigrams.csv',
                      'spyware_unique_bigrams.csv',
                      'virus_unique_bigrams.csv',
                      'trojan_unique_bigrams.csv',
                      'worm_unique_bigrams.csv',
                      'downloader_unique_bigrams.csv',
                      'backdoor_unique_bigrams.csv',
                      'benign_unique_bigrams.csv']] == 0.0).all(axis=1)
    )
]

spyware_data = spyware_data[
    ~(
        (spyware_data[['adware_unique_bigrams.csv',
                      'spyware_unique_bigrams.csv',
                      'virus_unique_bigrams.csv',
                      'trojan_unique_bigrams.csv',
                      'worm_unique_bigrams.csv',
                      'downloader_unique_bigrams.csv',
                      'backdoor_unique_bigrams.csv',
                      'benign_unique_bigrams.csv']] == 0.0).all(axis=1)
    )
]

virus_data = virus_data[
    ~(
        (virus_data[['adware_unique_bigrams.csv',
                      'spyware_unique_bigrams.csv',
                      'virus_unique_bigrams.csv',
                      'trojan_unique_bigrams.csv',
                      'worm_unique_bigrams.csv',
                      'downloader_unique_bigrams.csv',
                      'backdoor_unique_bigrams.csv',
                      'benign_unique_bigrams.csv']] == 0.0).all(axis=1)
    )
]

benign_data = benign_data[
    ~(
        (benign_data[['adware_unique_bigrams.csv',
                      'spyware_unique_bigrams.csv',
                      'virus_unique_bigrams.csv',
                      'trojan_unique_bigrams.csv',
                      'worm_unique_bigrams.csv',
                      'downloader_unique_bigrams.csv',
                      'backdoor_unique_bigrams.csv',
                      'benign_unique_bigrams.csv']] == 0.0).all(axis=1)
    )
]

# Save the DataFrames to new CSV files
adware_data.to_csv(r'D:\Malware\bigram_analysis\jaccard_similarity\column_added\adware.csv', index=False, sep=',')
trojan_data.to_csv(r'D:\Malware\bigram_analysis\jaccard_similarity\column_added\trojan.csv', index=False, sep=',')
worm_data.to_csv(r'D:\Malware\bigram_analysis\jaccard_similarity\column_added\worm.csv', index=False, sep=',')
downloader_data.to_csv(r'D:\Malware\bigram_analysis\jaccard_similarity\column_added\downloader.csv', index=False, sep=',')
spyware_data.to_csv(r'D:\Malware\bigram_analysis\jaccard_similarity\column_added\spyware.csv', index=False, sep=',')
virus_data.to_csv(r'D:\Malware\bigram_analysis\jaccard_similarity\column_added\virus.csv', index=False, sep=',')
backdoor_data.to_csv(r'D:\Malware\bigram_analysis\jaccard_similarity\column_added\backdoor.csv', index=False, sep=',')
benign_data.to_csv(r'D:\Malware\bigram_analysis\jaccard_similarity\column_added\benign.csv', index=False, sep=',')