# -*- coding: utf-8 -*-
"""
Created on Mon Oct  9 10:50:44 2023

@author: bishwajit
"""

import os
import nltk

# Ensure NLTK data is downloaded (only need to run this once)
nltk.download('punkt')

# Input folder path containing text files
input_folder = r'D:\Malware\Benign\8benign\api_name_arguments_clean_space'  # Replace with the path to your input folder

# Output folder path to store unigram files in CSV format
output_folder = r'D:\Malware\Benign\8benign\bigrams'  # Replace with the path to your output folder
os.makedirs(output_folder, exist_ok=True)

# Maximum number of bigrams to generate per file
max_bigrams = 20000

# Check if the input folder exists
if os.path.exists(input_folder):
    # Create the output folder if it doesn't exist
    if not os.path.exists(output_folder):
        os.makedirs(output_folder)

    # Initialize NLTK's tokenizer
    tokenizer = nltk.word_tokenize

    # Iterate through the files in the input folder
    for filename in os.listdir(input_folder):
        input_file_path = os.path.join(input_folder, filename)

        # Check if it's a file
        if os.path.isfile(input_file_path):
            print(f"Processing '{filename}'...")

            # Read the text from the input file
            with open(input_file_path, 'r', encoding='utf-8') as input_file:
                text = input_file.readlines()

            # Tokenize the text into words
            # tokens = tokenizer(text)

            # Generate bigrams
            bigrams = list(nltk.ngrams(text, 2))

            # Limit the number of bigrams to the maximum
            bigrams = bigrams[:max_bigrams]

            # Remove the .txt extension from the filename
            filename_without_extension = os.path.splitext(filename)[0]

            # Construct the output file path in the output folder
            output_csv_file_path = os.path.join(output_folder, f'{filename_without_extension}.csv')

            # Create a DataFrame from the list of bigrams
            import pandas as pd
            df = pd.DataFrame(bigrams, columns=['FirstWord', 'SecondWord'])

            # Save the bigrams to a CSV file
            df.to_csv(output_csv_file_path, index=False, escapechar='\\')

            print(f"Bigrams generated for '{filename}' and saved to '{output_csv_file_path}'.")
else:
    print(f"The input folder '{input_folder}' does not exist.")
