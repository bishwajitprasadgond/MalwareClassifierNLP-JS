# -*- coding: utf-8 -*-
"""
Created on Wed Dec 20 11:20:38 2023

@author: bishwajit
"""

import numpy as np
import os
import pandas as pd
from tqdm import tqdm
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import linear_kernel

def read_csv_generator(folder):
    files = [f for f in os.listdir(folder) if f.endswith('.csv')]
    for file in files:
        yield pd.read_csv(os.path.join(folder, file))

def compute_similarity(input_folder, reference_folder, output_folder):
    input_gen = read_csv_generator(input_folder)
    reference_gen = read_csv_generator(reference_folder)

    input_files = os.listdir(input_folder)
    reference_files = os.listdir(reference_folder)

    num_input_files = len(input_files)
    num_reference_files = len(reference_files)
    similarity_matrix = np.zeros((num_input_files, num_reference_files))

    tfidf_vectorizer = TfidfVectorizer()

    for i, input_df in enumerate(tqdm(input_gen, total=num_input_files, desc="Processing")):
        input_text = " ".join(input_df.astype(str).values.flatten())
        
        # Skip empty input text
        if not input_text.strip():
            continue

        input_matrix = tfidf_vectorizer.fit_transform([input_text])

        for j, reference_df in enumerate(reference_gen):
            reference_text = " ".join(reference_df.astype(str).values.flatten())
            
            # Skip empty reference text
            if not reference_text.strip():
                continue

            reference_matrix = tfidf_vectorizer.transform([reference_text])

            jaccard_similarity = linear_kernel(input_matrix, reference_matrix)
            similarity_matrix[i, j] = jaccard_similarity[0, 0]

        # Reset the reference generator to the beginning
        reference_gen = read_csv_generator(reference_folder)

    similarity_df = pd.DataFrame(similarity_matrix, columns=reference_files, index=input_files)
    similarity_df.to_csv(os.path.join(output_folder, 'spyware.csv'))

if __name__ == "__main__":
    input_folder = r'D:\Malware\unigram_analysis\spyware_unigram_created'
    reference_folder = r'D:\Malware\unigram_analysis\unique_unigram\unigram'
    output_folder = r'D:\Malware\unigram_analysis\unique_unigram\unigram\jaccard_sim'
    
    compute_similarity(input_folder, reference_folder, output_folder)
