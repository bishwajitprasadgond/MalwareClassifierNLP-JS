# -*- coding: utf-8 -*-
"""
Created on Wed Oct 11 17:45:28 2023

@author: bishwajit
"""

import os
import pandas as pd
from sklearn.metrics.pairwise import cosine_similarity
import numpy as np
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import linear_kernel

# Input folder containing input dataframes
input_folder = r'D:\Malware\n_grams\all_unigram_set_50k\adware'  # Replace with the path to your input folder

# Reference folder containing reference dataframes
reference_folder = r'D:\Malware\n_grams\all_unigram_set_50k\unique_unigram'  # Replace with the path to your reference folder

# Get a list of input and reference files
input_files = [f for f in os.listdir(input_folder) if f.endswith('.csv')]
reference_files = [f for f in os.listdir(reference_folder) if f.endswith('.csv')]

# Create empty matrices to store the similarity percentages
num_input_files = len(input_files)
num_reference_files = len(reference_files)
similarity_matrix = np.zeros((num_input_files, num_reference_files))

# Load input dataframes into a list
input_dataframes = [pd.read_csv(os.path.join(input_folder, f)) for f in input_files]

# Load reference dataframes into a list
reference_dataframes = [pd.read_csv(os.path.join(reference_folder, f)) for f in reference_files]

# Preprocess the dataframes into text strings
input_text = [" ".join(df.astype(str).values.flatten()) for df in input_dataframes]
reference_text = [" ".join(df.astype(str).values.flatten()) for df in reference_dataframes]

# Calculate Jaccard similarity for each combination of input and reference data
tfidf_vectorizer = TfidfVectorizer()
tfidf_matrix = tfidf_vectorizer.fit_transform(input_text + reference_text)
jaccard_similarities = linear_kernel(tfidf_matrix, tfidf_matrix)

# Create a dataframe to display the similarity matrix
similarity_df = pd.DataFrame(jaccard_similarities[:num_input_files, num_input_files:], columns=reference_files, index=input_files)

# Display the similarity matrix
print(similarity_df)

# Save the similarity matrix to a CSV file
similarity_df.to_csv(r'D:\Malware\n_grams\all_unigram_set_50k\jaccard_similarity\jaccard_sim\adware.csv')
