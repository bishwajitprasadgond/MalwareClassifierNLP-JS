# -*- coding: utf-8 -*-
"""
Created on Thu Feb  8 19:59:32 2024

@author: BISHWAJIT
"""


# Initialize variables to store the results
true_positive = np.zeros(len(conf_matrix))
false_positive = np.zeros(len(conf_matrix))
false_negative = np.zeros(len(conf_matrix))
true_negative = np.zeros(len(conf_matrix))
total_rows = np.zeros(len(conf_matrix))
mcc_values = np.zeros(len(conf_matrix))
# Calculate metrics
precision = true_positive / (true_positive + false_positive)
recall = true_positive / (true_positive + false_negative)
f1_score = 2 * (precision * recall) / (precision + recall)
accuracy = (true_positive + true_negative) / (true_positive + true_negative + false_positive + false_negative)

# Create a table
table = PrettyTable()
table.field_names = ["Class", "Total Rows", "True Positive", "True Negative", "False Positive", "False Negative", "Precision", "Recall", "F1 Score", "Accuracy", "MCC"]

for i, class_label in enumerate(classes):
    table.add_row([
        class_label, 
        total_rows[i], 
        true_positive[i], 
        true_negative[i], 
        false_positive[i], 
        false_negative[i], 
        precision[i], 
        recall[i], 
        f1_score[i], 
        accuracy[i],
        mcc_values[i]
    ])

print(table)