
# -*- coding: utf-8 -*-
"""
Created on Wed Nov 8 18:52:21 2023

@author: bishwajit
"""
import os
import re
import pandas as pd
from tqdm import tqdm

# Input folder path containing text files
input_folder = r'F:\Malware_old\malware_dataset\malware_samples\Trojan\cat\api_name_arguments_clean_space'  # Replace with the path to your input folder

# Output folder path to store unigram files in CSV format
output_folder = r'F:\Malware_old\malware_dataset\malware_samples\Trojan\cat\trojan_unigram_created'  # Replace with the path to your output folder
os.makedirs(output_folder, exist_ok=True)

# Check if the input folder exists
if os.path.exists(input_folder):
    # Create the output folder if it doesn't exist
    if not os.path.exists(output_folder):
        os.makedirs(output_folder)

    # Get the list of files in the input folder
    files = [filename for filename in os.listdir(input_folder) if os.path.isfile(os.path.join(input_folder, filename))]

    # Set up the tqdm progress bar
    progress_bar = tqdm(total=len(files), desc='Processing Files', unit='file')

    # Iterate through the files in the input folder
    for filename in files:
        input_file_path = os.path.join(input_folder, filename)

        # Read the text from the input file
        with open(input_file_path, 'r', encoding='utf-8') as input_file:
            text = input_file.read()

        # Tokenize the text at line breaks and avoid splitting at special characters
        unigrams = re.split(r'[\r\n]+', text)

        # Remove empty lines
        unigrams = [line.strip() for line in unigrams if line.strip()]

        # Remove the .txt extension from the filename
        filename_without_extension = os.path.splitext(filename)[0]

        # Construct the output file path in the output folder
        output_csv_file_path = os.path.join(output_folder, f'{filename_without_extension}.csv')

        # Create a DataFrame from the list of unigrams
        df = pd.DataFrame({'Unigram': unigrams})

        # Save the unigrams to a CSV file with an escape character
        df.to_csv(output_csv_file_path, index=False, encoding='utf-8', escapechar='\\')

        # Update the progress bar
        progress_bar.update(1)
        progress_bar.set_postfix(File=filename)

    # Close the progress bar
    progress_bar.close()

    print("Processing completed.")

else:
    print(f"The input folder '{input_folder}' does not exist.")
