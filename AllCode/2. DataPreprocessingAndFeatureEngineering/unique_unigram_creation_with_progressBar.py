
# -*- coding: utf-8 -*-
"""
Created on Wed Nov 8 18:52:21 2023

@author: bishwajit
"""
import os
import pandas as pd
from tqdm import tqdm
import time

name = 'benign'

# Input folder path containing CSV files
#input_folder = r'C:\sample\mal_classes\\' + name + '_unigram_created'
input_folder = r'F:\Mini_malware_sample\merge_mal_ben\unigram'
# Output file path to store the merged unique rows
#output_csv_file = r'C:\sample\mal_classes\\' + name +'.csv'
output_csv_file = r'F:\Mini_malware_sample\merge_mal_ben\malwareplusben.csv'
# Initialize an empty DataFrame to store unique rows
unique_rows_df = pd.DataFrame()

# Check if the input folder exists
if os.path.exists(input_folder):
    # Get the list of CSV files in the input folder
    csv_files = [f for f in os.listdir(input_folder) if f.endswith('.csv')]
    total_files = len(csv_files)

    # Create a progress bar
    progress_bar = tqdm(total=total_files, unit=' file(s)')

    # Iterate through the CSV files in the input folder
    for filename in csv_files:
        csv_file_path = os.path.join(input_folder, filename)

        # Read the CSV file into a DataFrame
        df = pd.read_csv(csv_file_path)

        # Append the unique rows to the DataFrame
        unique_rows_df = pd.concat([unique_rows_df, df]).drop_duplicates().reset_index(drop=True)

        # Update the progress bar
        progress_bar.update(1)
        
        # Calculate the percentage completion
        percentage_complete = (progress_bar.n / total_files) * 100

        # Print the percentage completion every 30 seconds
        if progress_bar.n % 5 == 0:
            print(f"{percentage_complete:.2f}% completed")

        # Sleep for 30 seconds
        time.sleep(30)

    # Close the progress bar
    progress_bar.close()

    # Save the merged unique rows to a new CSV file
    unique_rows_df.to_csv(output_csv_file, index=False)

    print(f"Unique rows merged and saved in '{output_csv_file}'.")
else:
    print(f"The input folder '{input_folder}' does not exist.")
