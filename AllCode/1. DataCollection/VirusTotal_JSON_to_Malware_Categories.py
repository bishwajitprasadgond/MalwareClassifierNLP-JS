# -*- coding: utf-8 -*-
"""
Created on Fri Jun 16 11:35:06 2023

@author: BISHU
"""

import json
import openpyxl
import os

# Get a list of JSON files in the directory
path_to_json = r"D:\Virusshare2023\jsondata\virusshare.com_hashfiles_VirusShare_00454"
json_files = [pos_json for pos_json in os.listdir(path_to_json) if pos_json.endswith('.json')]

# Create a new Excel workbook
workbook = openpyxl.Workbook()
sheet = workbook.active

# Write headers
scans = ["Acronis", "Ad-Aware", "AhnLab-V3", "Alibaba", "ALYac", "Antiy-AVL", "APEX", "Arcabit", "Avast", "AVG", "Avira", "Baidu", "BitDefender", "BitDefenderTheta", "Bkav", "CAT-QuickHeal", "ClamAV", "CMC", "Comodo", "CrowdStrike", "Cybereason", "Cylance", "Cynet", "Cyren", "DrWeb", "eGambit", "Elastic", "Emsisoft", "ESET-NOD32", "F-Secure", "FireEye", "Fortinet", "GData", "Gridinsoft", "Ikarus", "Jiangmin", "K7AntiVirus", "K7GW", "Kaspersky", "Kingsoft", "Lionic", "Malwarebytes", "MAX", "MaxSecure", "McAfee", "McAfee-GW-Edition", "Microsoft", "MicroWorld-eScan", "NANO-Antivirus", "Paloalto", "Panda", "Qihoo-360", "Rising", "Sangfor", "SentinelOne", "Sophos", "SUPERAntiSpyware", "Symantec", "TACHYON", "Tencent", "TrendMicro", "TrendMicro-HouseCall", "VBA32", "VIPRE", "ViRobot", "Webroot", "Yandex", "Zillya", "ZoneAlarm", "Zoner"]
malclass=["Adware", "Backdoor", "Downloader","Ransom", "Spyware", "Trojan", "Virus", "Worm","None"]
sheet.cell(row=1, column=1, value='MD5')
for i, scan in enumerate(scans):
    sheet.cell(row=1, column=i + 2, value=scan)
    
for j, mclass in enumerate(malclass):
    sheet.cell(row=1, column=j + 72, value=mclass)
row = 2

file_paths = []  # Initialize an empty list to store the file paths

directory = r"D:\Virusshare2023\jsondata\virusshare.com_hashfiles_VirusShare_00454"  # Replace with the directory path where your files are located

# Iterate over the files in the directory
for filename in os.listdir(directory):
    # Check if the item in the directory is a file
    if os.path.isfile(os.path.join(directory, filename)):
        # Create the absolute path by joining the directory path and the file name
        file_path = os.path.join(directory, filename)
        # Append the file path to the list
        file_paths.append(file_path)

# Fetch and process each file
for file_path in file_paths:
    try:
    # Perform operations on the file
        with open(file_path, 'r') as file:

            # Example: Read the contents of the file
            file_contents = file.read()
            # Example: Print the file contents
            file = open(file_path)
            #print(file_contents)
            print(file_path)
            json_list=list(file)
            
            strf = str(json_list[0]).replace("'", '"')
            #print(strf)
            new_string = strf.replace("True", "\"True\"")
            new_string_1 = new_string.replace("False", "\"False\"")
            new_string_2 = new_string_1.replace("None", "\"None\"")
            labels = json.loads(new_string_2)
            virustotal = labels
            if virustotal:
                md5 = labels['md5']
                #= labels['virustotal']['scans']['Kaspersky']['result']
                scans = labels['virustotal']['scans']
                if scans and md5:
                    sheet.cell(row=row, column=1, value=md5)
                    adware_count = 0
                    backdoor_count = 0
                    downloader_count = 0
                    ransom_count = 0
                    spyware_count = 0
                    trojan_count = 0
                    virus_count = 0
                    worm_count = 0
                    
                    for i, scan in enumerate(scans, start=2):
                        result = scans[scan].get('result')
                        sheet.cell(row=row, column=i, value=result)
                        
                        if result and "adware" in result.lower():
                            adware_count += 1
                        sheet.cell(row=row, column=72, value=adware_count)
                        
                        if result and "backdoor" in result.lower():
                            backdoor_count += 1
                        sheet.cell(row=row, column=73, value=backdoor_count)
                        
                        if result and "downloader" in result.lower():
                            downloader_count += 1
                        sheet.cell(row=row, column=74, value=downloader_count)
                        
                        if result and "ransom" in result.lower():
                            ransom_count += 1
                        sheet.cell(row=row, column=75, value=ransom_count)
                        
                        if result and "spyware" in result.lower():
                            spyware_count += 1
                        sheet.cell(row=row, column=76, value=spyware_count)
                        
                        if "trojan" in result.lower():
                            trojan_count += 1
                        sheet.cell(row=row, column=77, value=trojan_count)
                            
                        if result and "virus" in result.lower():
                            virus_count += 1
                        sheet.cell(row=row, column=78, value=virus_count) 
                            
                        if result and "worm" in result.lower():
                            worm_count += 1
                        sheet.cell(row=row, column=79, value=worm_count)
                        
                        if result in malclass:
                            malclass_column = malclass.index(result) + 72
                            count = sheet.cell(row=row, column=malclass_column).value
                            if count is None:
                                count = 0
                            count += 1
                            sheet.cell(row=row, column=malclass_column, value=count)
    
                                
                    row += 1
                else:
                    print(f"Missing required values in file: {file_path}")
            else:
                print(f"Missing 'virustotal' key in file: {file_path}")

    except (ValueError, KeyError, json.JSONDecodeError):
        print(f"Error processing file: {file_path}")
        continue
            
# Save the workbook
workbook.save(r"D:\Virusshare2023\jsondata\virusshare.com_hashfiles_VirusShare_00454.xlsx")
